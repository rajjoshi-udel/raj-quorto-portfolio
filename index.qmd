---
title: "Sample Data Visualization"
author: "Your Name"
date: today
format: html
execute:
  echo: true
  warning: false
  message: false
---


# Introduction

This document demonstrates how to create visualizations using matplotlib in Quarto.

## Data Visualization

Let's create a simple line plot showing sample data:

```{python}
import matplotlib.pyplot as plt
import numpy as np

# Generate sample data
x = np.linspace(0, 10, 100)
y1 = np.sin(x)
y2 = np.cos(x)

# Create the plot
plt.figure(figsize=(10, 6))
plt.plot(x, y1, label='sin(x)', linewidth=2)
plt.plot(x, y2, label='cos(x)', linewidth=2)
plt.xlabel('X values')
plt.ylabel('Y values')
plt.title('Sine and Cosine Functions')
plt.legend()
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()
```

## Bar Chart Example

Here's a bar chart showing sample sales data:

```{python}
import matplotlib.pyplot as plt

# Sample data
categories = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']
sales = [23, 45, 56, 78, 32, 67]

# Create bar chart
plt.figure(figsize=(10, 6))
bars = plt.bar(categories, sales, color=['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7', '#DDA0DD'])
plt.xlabel('Month')
plt.ylabel('Sales (in thousands)')
plt.title('Monthly Sales Data')
plt.grid(True, alpha=0.3, axis='y')

# Add value labels on bars
for bar, value in zip(bars, sales):
    plt.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 1, 
             str(value), ha='center', va='bottom')

plt.tight_layout()
plt.show()
```

## Scatter Plot with Trend Line

A scatter plot with a trend line:

```{python}
import matplotlib.pyplot as plt
import numpy as np
from scipy import stats

# Generate sample data with some noise
np.random.seed(42)
x = np.random.randn(50) * 10
y = 2 * x + np.random.randn(50) * 5

# Calculate trend line
slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)
line = slope * x + intercept

# Create scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(x, y, alpha=0.6, color='blue', s=50)
plt.plot(x, line, 'r--', linewidth=2, label=f'Trend line (RÂ²={r_value**2:.2f})')
plt.xlabel('X values')
plt.ylabel('Y values')
plt.title('Scatter Plot with Trend Line')
plt.legend()
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()
```

## Summary

This document shows various matplotlib visualizations that can be easily created and rendered in Quarto HTML format. The plots are interactive and will display beautifully in the generated HTML output.
